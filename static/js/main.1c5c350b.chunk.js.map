{"version":3,"sources":["TableTools.js","UrlPaths.js","EditNoteForm.js","NoteTable.js","NewNoteForm.js","ServerlessRates.js","App.js","reportWebVitals.js","index.js"],"names":["DataPriority","_ref","value","colour","HIGH","MEDIUM","LOW","react_default","a","createElement","Badge","bg","key","concat","className","DataTag","_ref2","valueList","Fragment","map","tag","idx","text","DataBoolean","_ref3","DataDate","_ref4","Moment","Date","format","BASE_URL","SERVERLESS_URL","EditNoteForm","id","data","reloader","closer","_useState","useState","description","tagsRaw","tags","join","priority","is_flagged","is_completed","_useState2","Object","slicedToArray","note","setNote","handleChange","event","target","name","prevState","newState","assign","split","s","trim","filter","Button","variant","onClick","Form","Group","Label","type","onChange","checked","preventDefault","console","log","axios","put","then","res","alert","NoteTable","isShowing","setIsShowing","_useState3","_useState4","noteId","setNoteId","_useState5","_useState6","columns","useMemo","Header","accessor","Cell","cell","TableTools_DataPriority","TableTools_DataTag","TableTools_DataBoolean","_ref5","TableTools_DataDate","_ref6","_useTable","useTable","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","useEffect","deleteNote","delete","openPopUpEditor","find","n","_id","Table","striped","hover","responsive","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","i","getRowProps","cells","getCellProps","original","src_EditNoteForm","NewNoteForm","state","setState","style","width","post","response","ServerlessRates","rates","setRates","get","Card","Body","Title","Text","entries","k","v","App","setData","loadData","Container","Row","Col","src_NewNoteForm","src_ServerlessRates","src_NoteTable","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","StrictMode","src_App"],"mappings":"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","file":"static/js/main.1c5c350b.chunk.js","sourcesContent":["import React from \"react\";\nimport Moment from 'moment';\nimport Badge from 'react-bootstrap/Badge';\n\nexport const DataPriority = ({ value }) => {\n    let colour = {\n        \"HIGH\": \"danger\",\n        \"MEDIUM\": \"secondary\",\n        \"LOW\": \"dark\",\n    }[value] || \"info\";\n    return (\n      <Badge bg={colour} key={`priority-${value}`} className=\"priority-badge\">{value}</Badge>\n    );\n};\n\nexport const DataTag = ({ valueList }) => {\n    return (\n        <>\n        {valueList.map((tag, idx) => (\n            <Badge bg=\"warning\" text=\"dark\" key={idx} className=\"tag-badge\">\n            {tag}\n            </Badge>\n        ))}\n    </>\n    );\n};\n\nexport const DataBoolean = ({ value }) => {\n    return (value)\n        ? (<><Badge bg=\"success\" key=\"trueBooleanTag\" className=\"boolean-badge\">TRUE</Badge></>)\n        : (<><Badge bg=\"danger\" key=\"falseBooleanTag\" className=\"boolean-badge\">FALSE</Badge></>);\n};\n\nexport const DataDate = ({ value }) => {\n    return (<><span key=\"dateTag\" className=\"date-badge\">\n        {Moment(new Date(value)).format('DD-MM-YYYY, HH:mm:ss')}\n    </span></>)\n};\n","export const BASE_URL = \"https://fast-lattice-361717.as.r.appspot.com/api/note\";\nexport const SERVERLESS_URL = \"https://fast-lattice-361717-hmwmpqdo3q-as.a.run.app/\";\n","import './EditNoteForm.css';\nimport axios from \"axios\";\nimport React, { useState } from \"react\";\nimport Form from 'react-bootstrap/Form';\nimport { BASE_URL } from './UrlPaths';\nimport { Button } from 'react-bootstrap';\n\nfunction EditNoteForm({id, data, reloader, closer}) {\n    const [note, setNote] = useState({\n        id: id,\n        description: data.description,\n        tagsRaw: data.tags.join(),\n        tags: data.tags,\n        priority: data.priority,\n        is_flagged: data.is_flagged,\n        is_completed: data.is_completed\n    });\n        \n    const handleChange = (event) => {\n        if (event.target.name === \"is_flagged\" || event.target.name === \"is_completed\") {\n            setNote(prevState => {\n                let newState = Object.assign({}, prevState);\n                newState[event.target.name] = !(newState[event.target.name]);\n                return newState;\n            });    \n            return;\n        }\n        \n        setNote(prevState => {\n            let newState = Object.assign({}, prevState);\n            newState[event.target.name] = event.target.value;\n            return newState;\n        });\n\n        if (event.target.name === \"tagsRaw\") {\n            setNote(prevState => {\n                let newState = Object.assign({}, prevState);\n                newState.tags = note.tagsRaw.split(/[, ]+/)\n                    .map(s => s.trim())\n                    .filter(s => !(!s));\n                return newState;\n            });\n        }\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        if (!(note.description.trim())) {\n            alert(\"Description must be filled!\");\n            return;\n        }\n\n        let data = {\n            description: note.description,\n            tags: note.tags,\n            priority: note.priority,\n            is_flagged: note.is_flagged,\n            is_completed: note.is_completed\n        };\n        console.log(data);\n        axios.put(`${BASE_URL}/${id}`, data)\n\t\t\t.then((res) => {\n                reloader();\n                closer();\n            });\n    }\n\n    return (\n        <div className='popup'>\n            <div className='popup_inner'>\n                <div className=\"d-flex justify-content-end\">\n                    <Button variant=\"dark\" className=\"float-right mb-3\" onClick={closer}>Close</Button>\n                </div>\n                <h2>Edit Note</h2>\n                <Form>\n                <Form.Group className=\"mb-3\">\n                <Form.Label>Description: </Form.Label><br/>\n                    <input type=\"text\" name=\"description\" value={note.description} onChange={handleChange}/>\n                </Form.Group>\n                <Form.Group className=\"mb-3\">\n                <Form.Label className=\"me-2\">Is completed? </Form.Label>\n                    <input type=\"checkbox\" name=\"is_completed\" checked={note.is_completed} onChange={handleChange}/>\n                </Form.Group>\n                <Form.Group className=\"mb-3\">\n                <Form.Label className=\"me-2\">Flag it? </Form.Label>\n                    <input type=\"checkbox\" name=\"is_flagged\" checked={note.is_flagged} onChange={handleChange}/>\n                </Form.Group>\n                <Form.Group className=\"mb-3\">\n                <Form.Label>Tags: </Form.Label><br/>\n                    <input type=\"text\" name=\"tagsRaw\" value={note.tagsRaw} onChange={handleChange}/>\n                </Form.Group>\n                <Form.Group className=\"mb-3\">\n                    <Form.Label className=\"me-2\">Priority:</Form.Label>\n                    <select name=\"priority\" value={note.priority} onChange={handleChange}>\n                        <option value=\"LOW\">LOW</option>\n                        <option value=\"MEDIUM\">MEDIUM</option>\n                        <option value=\"HIGH\">HIGH</option>\n                    </select>\n                </Form.Group>\n                <Button variant=\"warning\" type=\"submit\" value=\"Submit\" onClick={handleSubmit}>Submit</Button>\n                </Form>\n            </div>\n        </div>\n    );\n}\n\nexport default EditNoteForm;\n","import { DataPriority, DataTag, DataBoolean, DataDate } from \"./TableTools\";\nimport { useTable } from \"react-table\";\nimport axios from \"axios\";\nimport EditNoteForm from \"./EditNoteForm\";\nimport React, { useEffect, useState, useMemo } from \"react\";\nimport { Button } from 'react-bootstrap';\nimport Table from 'react-bootstrap/Table';\nimport { BASE_URL } from './UrlPaths';\n\nfunction NoteTable({ data, reloader }) {\n  const [isShowing, setIsShowing] = useState(false);\n  const [noteId, setNoteId] = useState(null);\n  const [note, setNote] = useState(null);\n\n\tconst columns = useMemo(() => \n    [\n      {\n          Header: \"description\",\n          accessor: \"description\"\n      },\n      {\n          Header: \"priority\",\n          accessor: \"priority\",\n          Cell: ({ cell: { value } }) => <DataPriority value={value} />\n      },\n      {\n          Header: \"tags\",\n          accessor: \"tags\",\n          Cell: ({ cell: { value } }) => <DataTag valueList={value} />\n      },\n      {\n          Header: \"is_flagged\",\n          accessor: \"is_flagged\",\n          Cell: ({ cell: { value } }) => <DataBoolean value={value} />\n      },\n      {\n          Header: \"created_datetime\",\n          accessor: \"created_date\",\n          Cell: ({ cell: { value } }) => <DataDate value={value} />\n      },\n      {\n          Header: \"is_completed\",\n          accessor: \"is_completed\",\n          Cell: ({ cell: { value } }) => <DataBoolean value={value} />\n      }\n    ],\n    []\n  );\n\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } = useTable({ columns, data });\n\n  useEffect(() => reloader(), []);\n\n  const deleteNote = (event) => {\n    axios.delete(`${BASE_URL}/${event.target.value}`)\n\t\t\t.then((res) => {\n        reloader();\n\t\t\t});\n  }\n\n  const openPopUpEditor = (event) => {\n    let noteId = event.target.value;\n    let note = data.find(n => n._id === noteId);\n    setNoteId(noteId);\n    setNote(Object.assign({}, note));\n    setIsShowing(true);\n  }\n\n  const closePopUpEditor = (event) => {\n    setIsShowing(false);\n  }\n\n  return (\n    <div className=\"p-3 mb-2 bg-light text-dark\">\n    <h2>Current Notes</h2>\n    <br/>\n    <Table striped hover variant=\"light\" responsive=\"sm\" {...getTableProps()}>\n      <thead>\n        {headerGroups.map(headerGroup => (\n          <tr {...headerGroup.getHeaderGroupProps()}>\n            {headerGroup.headers.map(column => (\n              <th {...column.getHeaderProps()}>{column.render(\"Header\")}</th>\n            ))}\n          </tr>\n        ))}\n      </thead>\n      <tbody {...getTableBodyProps()}>\n        {rows.map((row, i) => {\n          prepareRow(row);\n          return (\n            <tr {...row.getRowProps()}>\n              {row.cells.map(cell => {\n                return <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>;\n              })}\n              <td><Button variant=\"secondary\" type=\"submit\" name=\"noteid\" value={row.original._id} onClick={openPopUpEditor}>Edit note</Button></td>\n              <td><Button variant=\"danger\" type=\"submit\" name=\"noteid\" value={row.original._id} onClick={deleteNote}>Delete note</Button></td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </Table>\n      {isShowing\n        ? <EditNoteForm id={noteId} data={note} reloader={reloader} closer={closePopUpEditor}/>\n        : null\n      }\n    </div>\n  );\n}\n\nexport default NoteTable;\n","import axios from \"axios\";\nimport React, { useState } from \"react\";\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport { BASE_URL } from './UrlPaths';\n\nfunction NewNoteForm({ reloader }) {\n    const [state, setState] = useState({\n        description: \"\",\n        tagsRaw: \"\",\n        tags: [],\n        priority: \"LOW\",\n        is_flagged: false\n    });\n    \n    const handleChange = (event) => {\n        if (event.target.name === \"is_flagged\") {\n            setState(prevState => {\n                let newState = Object.assign({}, prevState);\n                newState.is_flagged = !(prevState.is_flagged);\n                return newState;\n            });    \n            return;\n        }\n        \n        setState(prevState => {\n            let newState = Object.assign({}, prevState);\n            newState[event.target.name] = event.target.value;\n            return newState;\n        });\n\n        if (event.target.name === \"tagsRaw\") {\n            setState(prevState => {\n                let newState = Object.assign({}, prevState);\n                newState.tags = state.tagsRaw.split(/[, ]+/)\n                    .map(s => s.trim())\n                    .filter(s => !(!s));\n                return newState;\n            });\n        }\n    }\n  \n    const handleSubmit = (event) => {\n        event.preventDefault();\n        if (!(state.description.trim())) {\n            alert(\"Description must be filled!\");\n            return;\n        }\n        axios.post(BASE_URL, {\n            description: state.description,\n            tags: state.tags,\n            priority: state.priority,\n            is_flagged: state.is_flagged,\n        })\n        .then((response) => {\n            reloader();\n        });\n\n        setState({\n            description: \"\",\n            tagsRaw: \"\",\n            tags: [],\n            priority: \"LOW\",\n            is_flagged: false\n        });\n    }\n\n    return (\n        <Form className=\"square border border-primary m-auto align-self-center p-3 mb-2 bg-light text-dark\" style={{ width: '30rem' }}>\n            <h2>New Note</h2>\n            <Form.Group className=\"mb-3\" >\n            <Form.Label>Description:</Form.Label><br/>\n                <input type=\"text\" name=\"description\" value={state.description} onChange={handleChange}/>\n            </Form.Group>\n            <Form.Group className=\"mb-3\" >\n            <Form.Label className=\"me-2\">Flag it?</Form.Label>\n                <input type=\"checkbox\" name=\"is_flagged\" checked={state.is_flagged} onChange={handleChange}/>\n            </Form.Group>\n            <Form.Group className=\"mb-3\" >\n            <Form.Label>Tags:</Form.Label><br/>\n                <input type=\"text\" name=\"tagsRaw\" value={state.tagsRaw} onChange={handleChange}/>\n            </Form.Group>\n            <Form.Group className=\"mb-3\" >\n                <Form.Label className=\"me-2\">Priority:</Form.Label>\n                    <select name=\"priority\" value={state.priority} onChange={handleChange}>\n                        <option value=\"LOW\">LOW</option>\n                        <option value=\"MEDIUM\">MEDIUM</option>\n                        <option value=\"HIGH\">HIGH</option>\n                    </select>\n            </Form.Group>\n            <Button variant=\"primary\" type=\"submit\" value=\"Submit\" onClick={handleSubmit}>Submit</Button>\n        </Form>\n    );\n}\n\nexport default NewNoteForm;\n","import React, { useState, useEffect } from \"react\";\nimport Card from 'react-bootstrap/Card';\nimport { SERVERLESS_URL } from './UrlPaths';\nimport axios from \"axios\";\n\nfunction ServerlessRates() {\n    const [rates, setRates] = useState({});\n\n    const loadRates = () => {\n\t\taxios.get(SERVERLESS_URL)\n\t\t\t.then((res) => {\n\t\t\t\tsetRates(res.data.rates);\n\t\t\t});\n  \t};\n    useEffect(() => loadRates(), []);\n\n    return (\n        <Card className=\"m-auto align-self-center p-3 mb-2 bg-secondary text-white\" style={{ width: '25rem' }}>\n            <Card.Body>\n                <Card.Title>\n                    Serverless rates for the day!\n                </Card.Title>\n                <Card.Text>\n                    {\n                        Object.entries(rates).map(([k, v]) => \n                            <li>{k}: {v}</li>\n                        )\n                    }\n                </Card.Text>\n            </Card.Body>\n        </Card>\n    )\n}\n\nexport default ServerlessRates;\n","import '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport axios from \"axios\";\nimport React, { useState } from \"react\";\nimport NoteTable from \"./NoteTable\";\nimport NewNoteForm from \"./NewNoteForm\";\nimport ServerlessRates from \"./ServerlessRates\";\nimport { BASE_URL } from './UrlPaths';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nfunction App() {\n  \tconst [data, setData] = useState([]);\n\n  \tconst loadData = () => {\n\t\taxios.get(BASE_URL)\n\t\t\t.then((res) => {\n\t\t\t\tsetData(res.data.data);\n\t\t\t});\n  \t};\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Container>\n\t\t\t\t<br/>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col><h1>Welcome to simplenoteapp!</h1></Col>\n\t\t\t\t</Row>\n\t\t\t\t<br/>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col><NewNoteForm reloader={loadData}/></Col>\n\t\t\t\t\t<Col><ServerlessRates/></Col>\n\t\t\t\t</Row>\n\t\t\t\t<br/>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col><NoteTable data={data} reloader={loadData}/></Col>\n\t\t\t\t</Row>\n\t\t\t\t<br/>\n\t\t\t</Container>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}