{"version":3,"sources":["TableTools.js","UrlPaths.js","EditNoteForm.js","NoteTable.js","NewNoteForm.js","ServerlessRates.js","App.js","reportWebVitals.js","index.js"],"names":["DataPriority","_ref","value","colour","HIGH","MEDIUM","LOW","react_default","a","createElement","Badge","bg","key","concat","className","DataTag","_ref2","valueList","Fragment","map","tag","idx","style","maxWidth","text","DataBoolean","_ref3","DataDate","_ref4","Moment","Date","format","BASE_URL","SERVERLESS_URL","EditNoteForm","id","data","reloader","closer","_useState","useState","description","tagsRaw","tags","join","priority","is_flagged","is_completed","_useState2","Object","slicedToArray","note","setNote","handleChange","event","target","name","prevState","newState","assign","split","s","trim","filter","Button","variant","onClick","Form","Group","Label","type","onChange","checked","preventDefault","console","log","axios","put","then","res","alert","NoteTable","isShowing","setIsShowing","_useState3","_useState4","noteId","setNoteId","_useState5","_useState6","columns","useMemo","Header","accessor","width","Cell","cell","overflow-wrap","TableTools_DataPriority","TableTools_DataTag","_ref5","TableTools_DataBoolean","_ref6","TableTools_DataDate","_ref7","_useTable","useTable","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","useEffect","deleteNote","delete","openPopUpEditor","find","n","_id","Table","overflow","striped","hover","responsive","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","i","getRowProps","cells","getCellProps","original","src_EditNoteForm","NewNoteForm","state","setState","placeholder","maxlength","post","response","ServerlessRates","rates","setRates","get","Card","Body","Title","Text","entries","k","v","App","setData","loadData","Container","Row","Col","src_NewNoteForm","src_ServerlessRates","src_NoteTable","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","StrictMode","src_App"],"mappings":"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","file":"static/js/main.b28da793.chunk.js","sourcesContent":["import React from \"react\";\nimport Moment from 'moment';\nimport Badge from 'react-bootstrap/Badge';\n\nexport const DataPriority = ({ value }) => {\n    let colour = {\n        \"HIGH\": \"danger\",\n        \"MEDIUM\": \"secondary\",\n        \"LOW\": \"dark\",\n    }[value] || \"info\";\n    return (\n      <Badge bg={colour} key={`priority-${value}`} className=\"priority-badge\">{value}</Badge>\n    );\n};\n\nexport const DataTag = ({ valueList }) => {\n    return (\n        <>\n        {valueList.map((tag, idx) => (\n            <Badge style={{ maxWidth: 100 }} bg=\"warning\" text=\"dark\" key={idx} className=\"tag-badge text-wrap\">\n            {tag}\n            </Badge>\n        ))}\n    </>\n    );\n};\n\nexport const DataBoolean = ({ value }) => {\n    return (value)\n        ? (<><Badge bg=\"success\" key=\"trueBooleanTag\" className=\"boolean-badge\">TRUE</Badge></>)\n        : (<><Badge bg=\"danger\" key=\"falseBooleanTag\" className=\"boolean-badge\">FALSE</Badge></>);\n};\n\nexport const DataDate = ({ value }) => {\n    return (<><span key=\"dateTag\" className=\"date-badge\">\n        {Moment(new Date(value)).format('DD-MM-YYYY, HH:mm:ss')}\n    </span></>)\n};\n","export const BASE_URL = \"https://fast-lattice-361717.as.r.appspot.com/api/note\";\nexport const SERVERLESS_URL = \"https://fast-lattice-361717-hmwmpqdo3q-as.a.run.app/\";\n","import './EditNoteForm.css';\nimport axios from \"axios\";\nimport React, { useState } from \"react\";\nimport Form from 'react-bootstrap/Form';\nimport { BASE_URL } from './UrlPaths';\nimport { Button } from 'react-bootstrap';\n\nfunction EditNoteForm({id, data, reloader, closer}) {\n    const [note, setNote] = useState({\n        id: id,\n        description: data.description,\n        tagsRaw: data.tags.join(),\n        tags: data.tags,\n        priority: data.priority,\n        is_flagged: data.is_flagged,\n        is_completed: data.is_completed\n    });\n        \n    const handleChange = (event) => {\n        if (event.target.name === \"is_flagged\" || event.target.name === \"is_completed\") {\n            setNote(prevState => {\n                let newState = Object.assign({}, prevState);\n                newState[event.target.name] = !(newState[event.target.name]);\n                return newState;\n            });    \n            return;\n        }\n        \n        setNote(prevState => {\n            let newState = Object.assign({}, prevState);\n            newState[event.target.name] = event.target.value;\n            return newState;\n        });\n\n        if (event.target.name === \"tagsRaw\") {\n            setNote(prevState => {\n                let newState = Object.assign({}, prevState);\n                newState.tags = note.tagsRaw.split(/[, ]+/)\n                    .map(s => s.trim())\n                    .filter(s => !(!s));\n                return newState;\n            });\n        }\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        if (!(note.description.trim())) {\n            alert(\"Description must be filled!\");\n            return;\n        }\n\n        let data = {\n            description: note.description,\n            tags: note.tags,\n            priority: note.priority,\n            is_flagged: note.is_flagged,\n            is_completed: note.is_completed\n        };\n        console.log(data);\n        axios.put(`${BASE_URL}/${id}`, data)\n\t\t\t.then((res) => {\n                reloader();\n                closer();\n            });\n    }\n\n    return (\n        <div className='popup'>\n            <div className='popup_inner'>\n                <div className=\"d-flex justify-content-end\">\n                    <Button variant=\"dark\" className=\"float-right mb-3\" onClick={closer}>Close</Button>\n                </div>\n                <h2>Edit Note</h2>\n                <Form>\n                <Form.Group className=\"mb-3\">\n                <Form.Label>Description: </Form.Label><br/>\n                    <input type=\"text\" name=\"description\" value={note.description} onChange={handleChange}/>\n                </Form.Group>\n                <Form.Group className=\"mb-3\">\n                <Form.Label className=\"me-2\">Is completed? </Form.Label>\n                    <input type=\"checkbox\" name=\"is_completed\" checked={note.is_completed} onChange={handleChange}/>\n                </Form.Group>\n                <Form.Group className=\"mb-3\">\n                <Form.Label className=\"me-2\">Flag it? </Form.Label>\n                    <input type=\"checkbox\" name=\"is_flagged\" checked={note.is_flagged} onChange={handleChange}/>\n                </Form.Group>\n                <Form.Group className=\"mb-3\">\n                <Form.Label>Tags: </Form.Label><br/>\n                    <input type=\"text\" name=\"tagsRaw\" value={note.tagsRaw} onChange={handleChange}/>\n                </Form.Group>\n                <Form.Group className=\"mb-3\">\n                    <Form.Label className=\"me-2\">Priority:</Form.Label>\n                    <select name=\"priority\" value={note.priority} onChange={handleChange}>\n                        <option value=\"LOW\">LOW</option>\n                        <option value=\"MEDIUM\">MEDIUM</option>\n                        <option value=\"HIGH\">HIGH</option>\n                    </select>\n                </Form.Group>\n                <Button variant=\"warning\" type=\"submit\" value=\"Submit\" onClick={handleSubmit}>Submit</Button>\n                </Form>\n            </div>\n        </div>\n    );\n}\n\nexport default EditNoteForm;\n","import { DataPriority, DataTag, DataBoolean, DataDate } from \"./TableTools\";\nimport { useTable } from \"react-table\";\nimport axios from \"axios\";\nimport EditNoteForm from \"./EditNoteForm\";\nimport React, { useEffect, useState, useMemo } from \"react\";\nimport { Button } from 'react-bootstrap';\nimport Table from 'react-bootstrap/Table';\nimport { BASE_URL } from './UrlPaths';\n\nfunction NoteTable({ data, reloader }) {\n  const [isShowing, setIsShowing] = useState(false);\n  const [noteId, setNoteId] = useState(null);\n  const [note, setNote] = useState(null);\n\n\tconst columns = useMemo(() => \n    [\n      {\n          Header: \"description\",\n          accessor: \"description\",\n          maxWidth: 250,\n          width: 150,\n          Cell: ({ cell: { value } }) => \n            <span style={{ maxWidth: 200, 'overflow-wrap': 'break-word' }}>{value}</span>\n      },\n      {\n          Header: \"priority\",\n          accessor: \"priority\",\n          Cell: ({ cell: { value } }) => <DataPriority value={value} />\n      },\n      {\n          Header: \"tags\",\n          accessor: \"tags\",\n          maxWidth: 150,\n          width: 100,\n          Cell: ({ cell: { value } }) => <DataTag valueList={value} />\n      },\n      {\n          Header: \"is_flagged\",\n          accessor: \"is_flagged\",\n          Cell: ({ cell: { value } }) => <DataBoolean value={value} />\n      },\n      {\n          Header: \"created_datetime\",\n          accessor: \"created_date\",\n          Cell: ({ cell: { value } }) => <DataDate value={value} />\n      },\n      {\n          Header: \"is_completed\",\n          accessor: \"is_completed\",\n          Cell: ({ cell: { value } }) => <DataBoolean value={value} />\n      }\n    ],\n    []\n  );\n\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } = useTable({ columns, data });\n\n  useEffect(() => reloader(), []);\n\n  const deleteNote = (event) => {\n    axios.delete(`${BASE_URL}/${event.target.value}`)\n\t\t\t.then((res) => {\n        reloader();\n\t\t\t});\n  }\n\n  const openPopUpEditor = (event) => {\n    let noteId = event.target.value;\n    let note = data.find(n => n._id === noteId);\n    setNoteId(noteId);\n    setNote(Object.assign({}, note));\n    setIsShowing(true);\n  }\n\n  const closePopUpEditor = (event) => {\n    setIsShowing(false);\n  }\n\n  return (\n    <div className=\"p-3 mb-2 bg-light text-dark\">\n    <h2>Current Notes</h2>\n    <br/>\n    <Table style={{ overflow: \"auto\" }} striped hover variant=\"light\" responsive=\"sm\" {...getTableProps()}>\n      <thead>\n        {headerGroups.map(headerGroup => (\n          <tr {...headerGroup.getHeaderGroupProps()}>\n            {headerGroup.headers.map(column => (\n              <th {...column.getHeaderProps({\n                style: { maxWidth: column.maxWidth, width: column.width }\n              })}>{column.render(\"Header\")}</th>\n            ))}\n          </tr>\n        ))}\n      </thead>\n      <tbody {...getTableBodyProps()}>\n        {rows.map((row, i) => {\n          prepareRow(row);\n          return (\n            <tr {...row.getRowProps()}>\n              {row.cells.map(cell => {\n                return <td {...cell.getCellProps({\n                  style: { maxWidth: cell.column.maxWidth, width: cell.column.width }\n                })}>{cell.render(\"Cell\")}</td>;\n              })}\n              <td><Button variant=\"secondary\" type=\"submit\" name=\"noteid\" value={row.original._id} onClick={openPopUpEditor}>Edit note</Button></td>\n              <td><Button variant=\"danger\" type=\"submit\" name=\"noteid\" value={row.original._id} onClick={deleteNote}>Delete note</Button></td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </Table>\n      {isShowing\n        ? <EditNoteForm id={noteId} data={note} reloader={reloader} closer={closePopUpEditor}/>\n        : null\n      }\n    </div>\n  );\n}\n\nexport default NoteTable;\n","import axios from \"axios\";\nimport React, { useState } from \"react\";\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport { BASE_URL } from './UrlPaths';\n\nfunction NewNoteForm({ reloader }) {\n    const [state, setState] = useState({\n        description: \"\",\n        tagsRaw: \"\",\n        tags: [],\n        priority: \"LOW\",\n        is_flagged: false\n    });\n    \n    const handleChange = (event) => {\n        if (event.target.name === \"is_flagged\") {\n            setState(prevState => {\n                let newState = Object.assign({}, prevState);\n                newState.is_flagged = !(prevState.is_flagged);\n                return newState;\n            });    \n            return;\n        }\n        \n        setState(prevState => {\n            let newState = Object.assign({}, prevState);\n            newState[event.target.name] = event.target.value;\n            return newState;\n        });\n\n        if (event.target.name === \"tagsRaw\") {\n            setState(prevState => {\n                let newState = Object.assign({}, prevState);\n                newState.tags = state.tagsRaw.split(/[, ]+/)\n                    .map(s => s.trim())\n                    .filter(s => !(!s));\n                return newState;\n            });\n        }\n    }\n  \n    const handleSubmit = (event) => {\n        event.preventDefault();\n        if (!(state.description.trim())) {\n            alert(\"Description must be filled!\");\n            return;\n        }\n        axios.post(BASE_URL, {\n            description: state.description,\n            tags: state.tags,\n            priority: state.priority,\n            is_flagged: state.is_flagged,\n        })\n        .then((response) => {\n            reloader();\n        });\n\n        setState({\n            description: \"\",\n            tagsRaw: \"\",\n            tags: [],\n            priority: \"LOW\",\n            is_flagged: false\n        });\n    }\n\n    return (\n        <Form className=\"square border border-primary m-auto align-self-center p-3 mb-2 bg-light text-dark\" style={{ width: '25rem' }}>\n            <h2>New Note</h2>\n            <Form.Group className=\"mb-3\" >\n            <Form.Label>Description:</Form.Label><br/>\n                <input placeholder=\"description here (must)\" type=\"text\" maxlength=\"100\" name=\"description\" value={state.description} onChange={handleChange}/>\n            </Form.Group>\n            <Form.Group className=\"mb-3\" >\n            <Form.Label className=\"me-2\">Flag it?</Form.Label>\n                <input type=\"checkbox\" name=\"is_flagged\" checked={state.is_flagged} onChange={handleChange}/>\n            </Form.Group>\n            <Form.Group className=\"mb-3\" >\n            <Form.Label>Tags:</Form.Label><br/>\n                <input placeholder=\"space/comma split words\" type=\"text\" maxlength=\"100\" name=\"tagsRaw\" value={state.tagsRaw} onChange={handleChange}/>\n            </Form.Group>\n            <Form.Group className=\"mb-3\" >\n                <Form.Label className=\"me-2\">Priority:</Form.Label>\n                    <select name=\"priority\" value={state.priority} onChange={handleChange}>\n                        <option value=\"LOW\">LOW</option>\n                        <option value=\"MEDIUM\">MEDIUM</option>\n                        <option value=\"HIGH\">HIGH</option>\n                    </select>\n            </Form.Group>\n            <Button variant=\"primary\" type=\"submit\" value=\"Submit\" onClick={handleSubmit}>Submit</Button>\n        </Form>\n    );\n}\n\nexport default NewNoteForm;\n","import React, { useState, useEffect } from \"react\";\nimport Card from 'react-bootstrap/Card';\nimport { SERVERLESS_URL } from './UrlPaths';\nimport axios from \"axios\";\n\nfunction ServerlessRates() {\n    const [rates, setRates] = useState({});\n\n    const loadRates = () => {\n\t\taxios.get(SERVERLESS_URL)\n\t\t\t.then((res) => {\n\t\t\t\tsetRates(res.data.rates);\n\t\t\t});\n  \t};\n    useEffect(() => loadRates(), []);\n\n    return (\n        <Card className=\"m-auto align-self-center p-3 mb-2 bg-secondary text-white\" style={{ width: '25rem' }}>\n            <Card.Body>\n                <Card.Title>\n                    Serverless rates for the day!\n                </Card.Title>\n                <Card.Text>\n                    {\n                        Object.entries(rates).map(([k, v]) => \n                            <li>{k}: {v}</li>\n                        )\n                    }\n                </Card.Text>\n            </Card.Body>\n        </Card>\n    )\n}\n\nexport default ServerlessRates;\n","import '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport axios from \"axios\";\nimport React, { useState } from \"react\";\nimport NoteTable from \"./NoteTable\";\nimport NewNoteForm from \"./NewNoteForm\";\nimport ServerlessRates from \"./ServerlessRates\";\nimport { BASE_URL } from './UrlPaths';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nfunction App() {\n  \tconst [data, setData] = useState([]);\n\n  \tconst loadData = () => {\n\t\taxios.get(BASE_URL)\n\t\t\t.then((res) => {\n\t\t\t\tsetData(res.data.data);\n\t\t\t});\n  \t};\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Container>\n\t\t\t\t<br/>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col><h1>Welcome to simplenoteapp!</h1></Col>\n\t\t\t\t</Row>\n\t\t\t\t<br/>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col><NewNoteForm reloader={loadData}/></Col>\n\t\t\t\t\t<Col><ServerlessRates/></Col>\n\t\t\t\t</Row>\n\t\t\t\t<br/>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col><NoteTable data={data} reloader={loadData}/></Col>\n\t\t\t\t</Row>\n\t\t\t\t<br/>\n\t\t\t</Container>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}